@page "/filmcatalog"
@inject HttpClient http

<h3>Catalogo de Filmes</h3>

@if (films == null)
{
    <p><em>Carregando...</em></p>
}
else if (films.Length == 0)
{
    <p><em>Não existem filmes cadatrados...</em></p>
}
else
{ 
<div class="container">
    <div class="row">
        <div class="form-inline">
            <label class="sr-only" for="inlineFormInputGroupUsername2">Username</label>
            <div class="input-group mb-2 mr-sm-2">
                <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Username">
                <div class="input-group-prepend">
                    <div class="input-group-text">Pesquisar</div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-5">
        <div class="form-inline">
            <label class="sr-only" for="inlineFormInputGroupUsername2">Username</label>
            <div class="input-group mb-2 mr-sm-2">
                <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Username">
                <div class="input-group-prepend">
                    <div class="input-group-text">Pesquisar</div>
                </div>
            </div>
        </div>
        @foreach (var film in films)
        {
            <div class="col-6 col-sm-6 col-md-4 col-lg-3" style="margin-bottom: 15px">
                <div class="card h-100">
                    <a href="#" class="card-link">
                        <img class="card-img" src="@film.Poster" alt="Poster do filme" />
                    </a>
                </div>
            </div>
        }
    </div>
</div>
    }

@code 
{
    Film[] films { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await CarregarFilmes();
    }

    async Task CarregarFilmes()
    {
        films = await http.GetFromJsonAsync<Film[]>("/api/films");

    }
}
